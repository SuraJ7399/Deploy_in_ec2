# This is a basic workflow to help you get started with Actions

name: main.yml

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]


  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: deploying ec2
        run: sudo apt install awscli -y && aws configure set aws_access_key_id ${{ secrets.ACCESS_KEY_ID }} && aws configure set aws_secret_access_key ${{ secrets.SECRET_ACCESS_KEY }} && wget https://releases.hashicorp.com/terraform/1.0.11/terraform_1.0.11_linux_amd64.zip && unzip *.zip && sudo mv terraform /usr/local/bin && terraform init && touch file.txt && terraform apply -auto-approve > file.txt && touch ip.txt && grep "EIP_new" file.txt > ip.txt && grep -o '[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}' ip.txt > ip_.txt && cat ip_.txt && ip=`cat ip_.txt` && wget https://surajskey.s3.ap-south-1.amazonaws.com/suraj.pem && chmod 400 suraj.pem && sleep 30s && ssh -i "suraj.pem" ubuntu@$ip -oStrictHostKeyChecking=no "sudo apt-get update && echo "Updated successfully" && sudo apt-get upgrade -y && echo "Upgraded successfully" && sudo apt install apache2 -y; sudo ufw allow 'Apache Full'; sudo systemctl status apache2;sudo rm /var/www/html/index.html; git clone https://github.com/Dmacc9223/BootStrap;cd BootStrap; sudo cp * /var/www/html"
        
      - name: Destroying the instance
        run: echo $ip && sleep 90s && terraform destroy -auto-approve

